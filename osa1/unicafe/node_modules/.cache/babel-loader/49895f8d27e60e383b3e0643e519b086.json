{"ast":null,"code":"import _slicedToArray from \"/home/jules/projects/fullstackopen/osa1/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jules/projects/fullstackopen/osa1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({\n  onClick,\n  text\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, text);\n\nconst Average = ({\n  good,\n  bad,\n  neutral\n}) => {\n  var sum = sum + good - neutral;\n  return sum / (good + bad + neutral);\n};\n\nconst App = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Give feedback \"), React.createElement(Button, {\n    onClick: () => setGood(good + 1),\n    text: \"Good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setNeutral(neutral + 1),\n    text: \"Neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setBad(bad + 1),\n    text: \"Bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Good \", good, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), \"Neutral \", neutral, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \"Bad \", bad, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \"Total \", good + bad + neutral, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \"Average \", Average(good = {\n    good\n  }, bad = {\n    bad\n  }, neutral = {\n    neutral\n  })));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/jules/projects/fullstackopen/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","onClick","text","Average","good","bad","neutral","sum","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KACb;AAAQ,EAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,IADH,CADF;;AAOA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,GAAR;AAAaC,EAAAA;AAAb,CAAD,KAA4B;AAC1C,MAAIC,GAAG,GAAGA,GAAG,GAAGH,IAAN,GAAaE,OAAvB;AACA,SAAOC,GAAG,IAAIH,IAAI,GAAGC,GAAP,GAAaC,OAAjB,CAAV;AACD,CAHD;;AAKA,MAAME,GAAG,GAAG,MAAM;AAAA,oBACQV,QAAQ,CAAC,CAAD,CADhB;AAAA;AAAA,QACTM,IADS;AAAA,QACHK,OADG;;AAAA,qBAEcX,QAAQ,CAAC,CAAD,CAFtB;AAAA;AAAA,QAETQ,OAFS;AAAA,QAEAI,UAFA;;AAAA,qBAGMZ,QAAQ,CAAC,CAAD,CAHd;AAAA;AAAA,QAGTO,GAHS;AAAA,QAGJM,MAHI;;AAKhB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMF,OAAO,CAACL,IAAI,GAAG,CAAR,CAA9B;AAA0C,IAAA,IAAI,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMM,UAAU,CAACJ,OAAO,GAAG,CAAX,CAAjC;AAAgD,IAAA,IAAI,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMK,MAAM,CAACN,GAAG,GAAG,CAAP,CAA7B;AAAwC,IAAA,IAAI,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQD,IADR,OACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,cAEWE,OAFX,OAEoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpB,UAGOD,GAHP,OAGY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ,YAISD,IAAI,GAAGC,GAAP,GAAaC,OAJtB,OAI+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ/B,cAKWH,OAAO,CAACC,IAAI,GAAG;AAACA,IAAAA;AAAD,GAAR,EAAgBC,GAAG,GAAG;AAACA,IAAAA;AAAD,GAAtB,EAA6BC,OAAO,GAAG;AAACA,IAAAA;AAAD,GAAvC,CALlB,CATF,CADF;AAoBD,CAzBD;;AA2BAP,QAAQ,CAACa,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({ onClick, text }) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\n\nconst Average = ({ good, bad, neutral }) => {\n  var sum = sum + good - neutral\n  return sum / (good + bad + neutral)\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>Give feedback </h1>\n\n      <Button onClick={() => setGood(good + 1)} text=\"Good\" />\n      <Button onClick={() => setNeutral(neutral + 1)} text=\"Neutral\" />\n      <Button onClick={() => setBad(bad + 1)} text=\"Bad\" />\n\n      <h1>Statistics</h1>\n\n      <p>\n        Good {good} <br />\n        Neutral {neutral} <br />\n        Bad {bad} <br />\n        Total {good + bad + neutral} <br />\n        Average {Average(good = {good}, bad = {bad}, neutral = {neutral})}\n      </p>\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}