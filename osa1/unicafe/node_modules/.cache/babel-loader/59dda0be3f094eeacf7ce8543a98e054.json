{"ast":null,"code":"import _slicedToArray from \"/home/jules/projects/fullstackopen/osa1/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jules/projects/fullstackopen/osa1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({\n  onClick,\n  text\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, text);\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return React.createElement(React.Fragment, null, (text, value));\n};\n\nconst Statistics = ({\n  good,\n  bad,\n  neutral\n}) => {\n  const sum = () => {\n    return good + bad + neutral;\n  };\n\n  const Average = () => {\n    if (sum() === 0) return 0;\n    return (good - bad) / sum();\n  };\n\n  const Positive = () => {\n    if (sum() === 0) return 0;\n    return good / sum() * 100;\n  };\n\n  if (sum() === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Statistics\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"No feedback given.\"));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    text: \"good\",\n    value: good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), \"Neutral \", neutral, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), \"Bad \", bad, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \"Total \", good + bad + neutral, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), \"Average \", Average(), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \"Positive \", Positive(), \"%\"));\n};\n\nconst App = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Give feedback \"), React.createElement(Button, {\n    onClick: () => setGood(good + 1),\n    text: \"Good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setNeutral(neutral + 1),\n    text: \"Neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setBad(bad + 1),\n    text: \"Bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/jules/projects/fullstackopen/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","onClick","text","Statistic","value","Statistics","good","bad","neutral","sum","Average","Positive","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({ onClick, text }) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\nconst Statistic = ({ text, value }) => {\n  return (\n    <>\n      {text, value} \n    </>\n  )\n}\n\nconst Statistics = ({ good, bad, neutral }) => {\n  const sum = () => { return good + bad + neutral }\n\n  const Average = () => {\n    if (sum() === 0) return 0\n    return (good - bad) / sum()\n  }\n\n  const Positive = () => {\n    if (sum() === 0) return 0\n    return good / sum() * 100\n  }\n\n  if (sum() === 0) {\n    return (\n      <div>\n        <h1>Statistics</h1>\n        <p>No feedback given.</p>\n\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h1>Statistics</h1>\n\n      <p>\n        <Statistic text=\"good\" value={good} />\n        Neutral {neutral} <br />\n        Bad {bad} <br />\n        Total {good + bad + neutral} <br />\n        Average {Average()} <br />\n        Positive {Positive()}%\n  </p>\n    </div>\n  )\n}\n\n\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>Give feedback </h1>\n\n      <Button onClick={() => setGood(good + 1)} text=\"Good\" />\n      <Button onClick={() => setNeutral(neutral + 1)} text=\"Neutral\" />\n      <Button onClick={() => setBad(bad + 1)} text=\"Bad\" />\n\n      <Statistics good={good} bad={bad} neutral={neutral} />\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}